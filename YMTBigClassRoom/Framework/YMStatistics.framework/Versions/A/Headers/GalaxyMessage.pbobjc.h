// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: galaxy_message.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class LogEntry_BaseInfo;
@class LogEntry_ExtraInfo;
@class LogEntry_LiveInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum LogEntry_Os

/** 日志来源 */
typedef GPB_ENUM(LogEntry_Os) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_Os_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_Os_OsDefault = 0,
  LogEntry_Os_Pc = 1,
  LogEntry_Os_Android = 2,
  LogEntry_Os_Ios = 3,

  /** H5 */
  LogEntry_Os_Web = 4,

  /** 服务端、ERP */
  LogEntry_Os_Server = 5,

  /** 后端 */
  LogEntry_Os_Backend = 6,
};

GPBEnumDescriptor *LogEntry_Os_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_Os_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_UserType

/** 用户类型 */
typedef GPB_ENUM(LogEntry_UserType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_UserType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_UserType_UsertypeDefault = 0,
  LogEntry_UserType_Stu = 1,
  LogEntry_UserType_Tea = 2,
  LogEntry_UserType_Cc = 3,
  LogEntry_UserType_Cr = 4,
  LogEntry_UserType_Audit = 5,
};

GPBEnumDescriptor *LogEntry_UserType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_UserType_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_LogType

/** 日志类型 */
typedef GPB_ENUM(LogEntry_LogType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_LogType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_LogType_LogtypeDefault = 0,

  /** 点击 */
  LogEntry_LogType_Click = 1,

  /** 页面跳转 */
  LogEntry_LogType_Pv = 2,

  /** 上课心跳信息 */
  LogEntry_LogType_Heartbeat = 3,

  /** 对应APP级别日志，启动崩溃等 */
  LogEntry_LogType_App = 4,

  /** 页面刷新 */
  LogEntry_LogType_Refresh = 5,

  /** 搜索 */
  LogEntry_LogType_Search = 6,
};

GPBEnumDescriptor *LogEntry_LogType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_LogType_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_NetType

/** 网络类型 */
typedef GPB_ENUM(LogEntry_NetType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_NetType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_NetType_NettypeDefault = 0,
  LogEntry_NetType_G2 = 1,
  LogEntry_NetType_G3 = 2,
  LogEntry_NetType_G4 = 3,
  LogEntry_NetType_G5 = 4,
  LogEntry_NetType_Wifi = 5,

  /** 有线 */
  LogEntry_NetType_Cable = 6,

  /** 未知 */
  LogEntry_NetType_NetUnknow = 7,
};

GPBEnumDescriptor *LogEntry_NetType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_NetType_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_AppAction

/** APP相关 操作类型 */
typedef GPB_ENUM(LogEntry_AppAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_AppAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_AppAction_AppactionDefault = 0,
  LogEntry_AppAction_Open = 1,
  LogEntry_AppAction_Crash = 2,
  LogEntry_AppAction_Exit = 3,
};

GPBEnumDescriptor *LogEntry_AppAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_AppAction_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_Company

typedef GPB_ENUM(LogEntry_Company) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_Company_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_Company_CompanyDefault = 0,
  LogEntry_Company_Yimi = 1,
  LogEntry_Company_Juren = 2,
  LogEntry_Company_Jronline = 3,
};

GPBEnumDescriptor *LogEntry_Company_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_Company_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_OperatorType

typedef GPB_ENUM(LogEntry_OperatorType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_OperatorType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_OperatorType_OperatortypeDefault = 0,

  /** 联通 */
  LogEntry_OperatorType_Unicom = 1,

  /** 电信 */
  LogEntry_OperatorType_Telecom = 2,

  /** 移动 */
  LogEntry_OperatorType_Mobile = 3,
  LogEntry_OperatorType_OperatorUnknow = 4,
};

GPBEnumDescriptor *LogEntry_OperatorType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_OperatorType_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_LessonType

/** 课程类型 */
typedef GPB_ENUM(LogEntry_LessonType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_LessonType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_LessonType_LessontypeDefault = 0,

  /** 试听课 */
  LogEntry_LessonType_Audition = 1,

  /** 正常课 */
  LogEntry_LessonType_Order = 2,

  /** 标准试听课 */
  LogEntry_LessonType_AuditionU = 3,

  /** 普通试听课 */
  LogEntry_LessonType_AuditionN = 4,
};

GPBEnumDescriptor *LogEntry_LessonType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_LessonType_IsValidValue(int32_t value);

#pragma mark - Enum LogEntry_SDKVersion

/** 版本类型 */
typedef GPB_ENUM(LogEntry_SDKVersion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LogEntry_SDKVersion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LogEntry_SDKVersion_SdkversionDefault = 0,
  LogEntry_SDKVersion_V100 = 1,
  LogEntry_SDKVersion_V101 = 2,
  LogEntry_SDKVersion_V102 = 3,
  LogEntry_SDKVersion_V103 = 4,
  LogEntry_SDKVersion_V104 = 5,
  LogEntry_SDKVersion_V105 = 6,
  LogEntry_SDKVersion_V106 = 7,
  LogEntry_SDKVersion_V107 = 8,
  LogEntry_SDKVersion_V108 = 9,
  LogEntry_SDKVersion_V109 = 10,
  LogEntry_SDKVersion_V110 = 11,
  LogEntry_SDKVersion_V111 = 12,
  LogEntry_SDKVersion_V112 = 13,
  LogEntry_SDKVersion_V113 = 14,
  LogEntry_SDKVersion_V114 = 15,
  LogEntry_SDKVersion_V115 = 16,
  LogEntry_SDKVersion_V116 = 17,
  LogEntry_SDKVersion_V117 = 18,
  LogEntry_SDKVersion_V118 = 19,
  LogEntry_SDKVersion_V119 = 20,
  LogEntry_SDKVersion_V120 = 21,
  LogEntry_SDKVersion_V121 = 22,
  LogEntry_SDKVersion_V122 = 23,
  LogEntry_SDKVersion_V123 = 24,
  LogEntry_SDKVersion_V124 = 25,
  LogEntry_SDKVersion_V125 = 26,
  LogEntry_SDKVersion_V126 = 27,
  LogEntry_SDKVersion_V127 = 28,
  LogEntry_SDKVersion_V128 = 29,
  LogEntry_SDKVersion_V129 = 30,
  LogEntry_SDKVersion_V130 = 31,
};

GPBEnumDescriptor *LogEntry_SDKVersion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LogEntry_SDKVersion_IsValidValue(int32_t value);

#pragma mark - GalaxyMessageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface GalaxyMessageRoot : GPBRootObject
@end

#pragma mark - LogEntry

typedef GPB_ENUM(LogEntry_FieldNumber) {
  LogEntry_FieldNumber_BaseInfo = 1,
  LogEntry_FieldNumber_LiveInfo = 2,
  LogEntry_FieldNumber_ExtraInfoArray = 3,
};

/**
 * [START messages]
 **/
@interface LogEntry : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) LogEntry_BaseInfo *baseInfo;
/** Test to see if @c baseInfo has been set. */
@property(nonatomic, readwrite) BOOL hasBaseInfo;

@property(nonatomic, readwrite, strong, null_resettable) LogEntry_LiveInfo *liveInfo;
/** Test to see if @c liveInfo has been set. */
@property(nonatomic, readwrite) BOOL hasLiveInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LogEntry_ExtraInfo*> *extraInfoArray;
/** The number of items in @c extraInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger extraInfoArray_Count;

@end

#pragma mark - LogEntry_BaseInfo

typedef GPB_ENUM(LogEntry_BaseInfo_FieldNumber) {
  LogEntry_BaseInfo_FieldNumber_SysTime = 1,
  LogEntry_BaseInfo_FieldNumber_Time = 2,
  LogEntry_BaseInfo_FieldNumber_SessionId = 3,
  LogEntry_BaseInfo_FieldNumber_Uuid = 4,
  LogEntry_BaseInfo_FieldNumber_Company = 5,
  LogEntry_BaseInfo_FieldNumber_SdkVersion = 6,
  LogEntry_BaseInfo_FieldNumber_UserId = 7,
  LogEntry_BaseInfo_FieldNumber_UserType = 8,
  LogEntry_BaseInfo_FieldNumber_Type = 9,
  LogEntry_BaseInfo_FieldNumber_EventId = 10,
  LogEntry_BaseInfo_FieldNumber_NetType = 11,
  LogEntry_BaseInfo_FieldNumber_OperatorType = 12,
  LogEntry_BaseInfo_FieldNumber_RequestCnt = 13,
  LogEntry_BaseInfo_FieldNumber_Business = 14,
  LogEntry_BaseInfo_FieldNumber_Os = 15,
  LogEntry_BaseInfo_FieldNumber_Channel = 16,
  LogEntry_BaseInfo_FieldNumber_AppVersion = 17,
  LogEntry_BaseInfo_FieldNumber_AppType = 18,
  LogEntry_BaseInfo_FieldNumber_DeviceInfo = 19,
  LogEntry_BaseInfo_FieldNumber_OsVersion = 20,
  LogEntry_BaseInfo_FieldNumber_AppAction = 21,
  LogEntry_BaseInfo_FieldNumber_Info = 22,
  LogEntry_BaseInfo_FieldNumber_StayTime = 23,
};

/**
 * 每次请求时上报的基本信息
 **/
@interface LogEntry_BaseInfo : GPBMessage

/** 系统上报时间戳-毫秒(由银河服务端生成) */
@property(nonatomic, readwrite) int64_t sysTime;

/** 客户端上报时间戳-毫秒 */
@property(nonatomic, readwrite) int64_t time;

/**
 * 会话Id，一段会话的唯一标识（客户端每次启动APP到下一次启动APP之间生成一个会话id）
 * 生成规则：16位随机数+13位时间戳+3位(端表示pc:001 android:002 ios:003 web:004 server:005)
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** 设备唯一标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;

/** 公司标识 */
@property(nonatomic, readwrite) LogEntry_Company company;

/** sdk版本 */
@property(nonatomic, readwrite) LogEntry_SDKVersion sdkVersion;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 用户类型 */
@property(nonatomic, readwrite) LogEntry_UserType userType;

/** 日志类型 */
@property(nonatomic, readwrite) LogEntry_LogType type;

/** 事件ID (产品经理提供) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *eventId;

/** 网络类型 */
@property(nonatomic, readwrite) LogEntry_NetType netType;

/** 网络运营商类型 */
@property(nonatomic, readwrite) LogEntry_OperatorType operatorType;

/** 接口请求次数，默认为1 */
@property(nonatomic, readwrite) int32_t requestCnt;

/** 业务类型 (产品经理提供) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *business;

/** 来源:安卓、iOS、pc、web、server */
@property(nonatomic, readwrite) LogEntry_Os os;

/** 渠道来源(针对前端的落地页url编码，H5商城的来源渠道) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *channel;

/** APP版本号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appVersion;

/** APP类型：yimi/bubugao/yuxuepai  */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appType;

/** 设备型号，标示手机品牌+型号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceInfo;

/** 设备操作系统版本号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *osVersion;

@property(nonatomic, readwrite) LogEntry_AppAction appAction;

/** 信息,崩溃信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *info;

/** 页面停留时间 */
@property(nonatomic, readwrite) int64_t stayTime;

@end

/**
 * Fetches the raw value of a @c LogEntry_BaseInfo's @c company property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_BaseInfo_Company_RawValue(LogEntry_BaseInfo *message);
/**
 * Sets the raw value of an @c LogEntry_BaseInfo's @c company property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_BaseInfo_Company_RawValue(LogEntry_BaseInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c LogEntry_BaseInfo's @c sdkVersion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_BaseInfo_SdkVersion_RawValue(LogEntry_BaseInfo *message);
/**
 * Sets the raw value of an @c LogEntry_BaseInfo's @c sdkVersion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_BaseInfo_SdkVersion_RawValue(LogEntry_BaseInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c LogEntry_BaseInfo's @c userType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_BaseInfo_UserType_RawValue(LogEntry_BaseInfo *message);
/**
 * Sets the raw value of an @c LogEntry_BaseInfo's @c userType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_BaseInfo_UserType_RawValue(LogEntry_BaseInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c LogEntry_BaseInfo's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_BaseInfo_Type_RawValue(LogEntry_BaseInfo *message);
/**
 * Sets the raw value of an @c LogEntry_BaseInfo's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_BaseInfo_Type_RawValue(LogEntry_BaseInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c LogEntry_BaseInfo's @c netType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_BaseInfo_NetType_RawValue(LogEntry_BaseInfo *message);
/**
 * Sets the raw value of an @c LogEntry_BaseInfo's @c netType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_BaseInfo_NetType_RawValue(LogEntry_BaseInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c LogEntry_BaseInfo's @c operatorType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_BaseInfo_OperatorType_RawValue(LogEntry_BaseInfo *message);
/**
 * Sets the raw value of an @c LogEntry_BaseInfo's @c operatorType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_BaseInfo_OperatorType_RawValue(LogEntry_BaseInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c LogEntry_BaseInfo's @c os property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_BaseInfo_Os_RawValue(LogEntry_BaseInfo *message);
/**
 * Sets the raw value of an @c LogEntry_BaseInfo's @c os property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_BaseInfo_Os_RawValue(LogEntry_BaseInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c LogEntry_BaseInfo's @c appAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_BaseInfo_AppAction_RawValue(LogEntry_BaseInfo *message);
/**
 * Sets the raw value of an @c LogEntry_BaseInfo's @c appAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_BaseInfo_AppAction_RawValue(LogEntry_BaseInfo *message, int32_t value);

#pragma mark - LogEntry_LiveInfo

typedef GPB_ENUM(LogEntry_LiveInfo_FieldNumber) {
  LogEntry_LiveInfo_FieldNumber_LessonId = 1,
  LogEntry_LiveInfo_FieldNumber_LessonType = 2,
  LogEntry_LiveInfo_FieldNumber_ServerIp = 3,
  LogEntry_LiveInfo_FieldNumber_UserIp = 4,
  LogEntry_LiveInfo_FieldNumber_ClassType = 5,
};

/**
 * heartbeat，教室内事件上报
 **/
@interface LogEntry_LiveInfo : GPBMessage

/** 课程id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lessonId;

/** 课程类型 */
@property(nonatomic, readwrite) LogEntry_LessonType lessonType;

/** 服务器IP */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverIp;

/** 用户ip */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userIp;

/** 教室类型 (传递值：1: 1v1 2: 1vN 3: 1v6) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *classType;

@end

/**
 * Fetches the raw value of a @c LogEntry_LiveInfo's @c lessonType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LogEntry_LiveInfo_LessonType_RawValue(LogEntry_LiveInfo *message);
/**
 * Sets the raw value of an @c LogEntry_LiveInfo's @c lessonType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLogEntry_LiveInfo_LessonType_RawValue(LogEntry_LiveInfo *message, int32_t value);

#pragma mark - LogEntry_ExtraInfo

typedef GPB_ENUM(LogEntry_ExtraInfo_FieldNumber) {
  LogEntry_ExtraInfo_FieldNumber_Key = 1,
  LogEntry_ExtraInfo_FieldNumber_Value = 2,
};

/**
 * 额外key、value上报
 **/
@interface LogEntry_ExtraInfo : GPBMessage

/** 额外字段key */
@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

/** 额外字段value */
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
